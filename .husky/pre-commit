CLEAR_LINE="\033[1K"

FORMATTING_FAILED=false
LINT_FAILED=false


echo "\n Checking code with husky üê∫\n"
# echo " --------------------------------------"
echo ""

env echo " ‚è≥ Lint check running...             "
echo ""

if ! npm run format &> /dev/null; then
	FORMATTING_FAILED=true
  # echo "${CLEAR_LINE}\r| ‚ùå ESLint found errors. Please fix the linting errors before committing."
  echo "  ‚ùå Prettier found errors. Please fix the linting errors before committing."
  # echo "-----------------------------------------------------------------------------------------"
else
	echo "  ‚úÖ Prettier passed."
	# echo "-----------------"
fi

echo ""
echo ""

env echo " ‚è≥ Lint check running...             "
echo ""

if ! npm run lint &> /dev/null; then
	LINT_FAILED=true
  # echo "${CLEAR_LINE}\r| ‚ùå ESLint found errors. Please fix the linting errors before committing."
  echo "  ‚ùå ESLint found errors. Please fix the linting errors before committing."
  # echo "-----------------------------------------------------------------------------------------"
else
	echo "  ‚úÖ ESLint passed."
	# echo "-----------------"
fi

echo ""
echo ""
if [ "$FORMATTING_FAILED" = "true" ] || [ "$LINT_FAILED" = "true" ]; then

  echo "\033[0;31müö®  Due to an error in one of the checks, git commit attempt was aborted\033[0m"
  if [ "$FORMATTING_FAILED" = "true" ]; then
	  echo ""
    echo "üí° For more information about lint errors, run 'npm run format'"
  fi
  if [ "$LINT_FAILED" = "true" ]; then
	  echo ""
    echo "üí° For more information about lint errors, run 'npm run lint'"
  fi
  echo ""
  exit 1
else
  echo "\033[0;32mGood job mate!\033[0m"
	echo ""
	echo ""
  echo "Committing Code..."
	echo ""
	echo ""
  exit 0
fi
